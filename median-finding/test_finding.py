import unittest
from finding import get_by_index
from random import randint

expectation = [
    ({1}, 1),
    ({00}, 0),
    ({-1}, -1),
    ({4, 7}, 4),
    ({124}, 124),
    ({2, 190}, 2),
    ({91, 35}, 35),
    ({136, 31}, 31),
    ({225, 4, 7}, 7),
    ({200, 153}, 153),
    ({26, 66, 95}, 66),
    ({170, 83, 46}, 83),
    ({0, 218, 204}, 204),
    ({201, 236, 17}, 201),
    ({137, 219, 121}, 137),
    ({72, 83, 71, 159}, 72),
    ({66, 251, 61, 151}, 66),
    ({199, 180, 132, 7}, 132),
    ({17, 49, 20, 52, 87}, 49),
    ({169, 123, 164, 198}, 164),
    ({97, 41, 180, 52, 123}, 97),
    ({2, 165, 172, 21, 250}, 165),
    ({96, 98, 164, 142, 246}, 142),
    ({164, 108, 208, 55, 215}, 164),
    ({0, 98, 180, 87, 152, 157}, 98),
    ({226, 34, 197, 11, 154, 95}, 95),
    ({99, 4, 6, 16, 149, 22, 222}, 22),
    ({160, 196, 5, 180, 153, 255}, 160),
    ({194, 200, 203, 45, 119, 191}, 191),
    ({193, 3, 103, 8, 74, 113, 127}, 103),
    ({135, 72, 9, 168, 15, 241, 216}, 135),
    ({75, 107, 240, 81, 86, 214, 253}, 107),
    ({131, 204, 172, 20, 58, 125, 191}, 131),
    ({225, 132, 37, 200, 108, 177, 209}, 177),
    ({33, 163, 198, 77, 206, 54, 89, 122}, 89),
    ({192, 5, 202, 145, 85, 157, 189, 63}, 145),
    ({165, 230, 8, 233, 171, 178, 26, 219}, 171),
    ({70, 200, 44, 174, 243, 182, 251, 223}, 182),
    ({153, 26, 38, 111, 20, 117, 185, 58, 94}, 94),
    ({194, 198, 142, 145, 152, 156, 253, 223}, 156),
    ({35, 38, 154, 10, 140, 145, 22, 120, 250}, 120),
    ({100, 201, 235, 44, 139, 238, 180, 24, 27}, 139),
    ({38, 70, 112, 16, 17, 179, 216, 249, 26, 59}, 59),
    ({97, 226, 163, 35, 102, 71, 103, 204, 85, 94}, 97),
    ({160, 8, 136, 106, 43, 118, 151, 216, 27, 94}, 106),
    ({224, 161, 66, 195, 255, 37, 165, 106, 44, 95}, 106),
    ({101, 234, 84, 117, 215, 248, 89, 26, 253, 191}, 117),
    ({228, 231, 199, 234, 21, 214, 86, 120, 219, 124}, 199),
    ({197, 134, 170, 107, 15, 207, 209, 240, 149, 215}, 170),
    ({2, 71, 40, 77, 144, 220, 213, 183, 123, 188, 221}, 144),
    ({0, 131, 39, 48, 210, 19, 149, 54, 90, 60, 189, 254}, 60),
    ({64, 224, 3, 164, 36, 231, 236, 238, 207, 85, 25, 94}, 94),
    ({226, 99, 137, 11, 235, 15, 241, 146, 84, 85, 87, 188}, 99),
    ({194, 3, 58, 229, 38, 196, 170, 86, 152, 218, 95, 255}, 152),
    ({160, 132, 5, 102, 72, 108, 141, 76, 143, 82, 149, 190}, 108),
    ({128, 4, 197, 38, 228, 200, 201, 236, 237, 19, 149, 152}, 152),
    ({32, 193, 165, 167, 140, 204, 238, 28, 20, 182, 186, 252}, 167),
    ({35, 131, 134, 70, 234, 172, 146, 180, 183, 216, 154, 184}, 154),
    ({1, 67, 134, 231, 170, 143, 177, 63, 214, 87, 93, 158, 255}, 143),
    ({224, 193, 1, 67, 5, 140, 187, 172, 80, 244, 55, 23, 251, 93}, 93),
    ({128, 248, 165, 102, 72, 77, 115, 21, 56, 123, 124, 152, 184}, 123),
    ({129, 4, 133, 199, 167, 138, 107, 235, 112, 179, 152, 56, 254}, 138),
    ({6, 166, 72, 107, 204, 12, 206, 15, 46, 114, 21, 245, 121, 223}, 107),
    ({198, 41, 139, 172, 78, 15, 48, 150, 214, 216, 121, 156, 94, 63}, 121),
    ({101, 105, 77, 142, 176, 49, 114, 145, 85, 149, 53, 216, 154, 27}, 105),
    ({96, 225, 4, 5, 37, 231, 106, 139, 44, 140, 175, 177, 17, 214, 94}, 106),
    ({96, 97, 34, 227, 196, 67, 39, 72, 14, 48, 16, 178, 22, 119, 87, 25}, 67),
    ({256, 68, 132, 27, 41, 235, 203, 206, 175, 146, 83, 248, 57, 91, 61}, 132)
]


class TestScheduling(unittest.TestCase):
    def test_size(self):
        for arg, expected_output in expectation:
            actual_output = get_by_index(arg, (len(arg) - 1) // 2)
            self.assertEqual(actual_output, expected_output, f"In: {arg}")


if __name__ == "__main__":
    unittest.main()
